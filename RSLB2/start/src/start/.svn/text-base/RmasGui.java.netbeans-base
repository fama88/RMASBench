/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import org.jdesktop.layout.*;
/**
 *
 * @author riccardo
 */
public class RmasGui extends javax.swing.JFrame {

    /**
     * Creates new form RmasGui
     */
    public RmasGui() {
        initComponents();
        String sel = (String) alg_sel.getSelectedItem();
        if (sel.compareTo("DSA") == 0) {
            dsa_p.setVisible(true);
            dsa_p_label.setVisible(true);
            n_neigh_label.setVisible(false);
            n_neigh.setVisible(false);
        } else if (sel.compareTo("Max Sum") == 0) {
            dsa_p.setVisible(false);
            dsa_p_label.setVisible(false);
            n_neigh_label.setVisible(true);
            n_neigh.setVisible(true);
        } else {
            dsa_p.setVisible(false);
            dsa_p_label.setVisible(false);
            n_neigh_label.setVisible(false);
            n_neigh.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alg_sel = new javax.swing.JComboBox();
        alg_sel_label = new javax.swing.JLabel();
        cycle_label = new javax.swing.JLabel();
        num_cycle = new javax.swing.JTextField();
        target_label = new javax.swing.JLabel();
        n_targets = new javax.swing.JTextField();
        s_time_label = new javax.swing.JLabel();
        start_time = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        dsa_p_label = new javax.swing.JLabel();
        dsa_p = new javax.swing.JTextField();
        n_neigh_label = new javax.swing.JLabel();
        n_neigh = new javax.swing.JTextField();
        start_button = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        alg_sel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DSA", "Max Sum", "Dummy Agent" }));
        alg_sel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alg_selActionPerformed(evt);
            }
        });

        alg_sel_label.setText("Select your algorithm");

        cycle_label.setText("Number of cycle:");

        num_cycle.setText("100");

        target_label.setText("Number of targets:");

        n_targets.setText("-1");

        s_time_label.setText("Starts Time:");

        start_time.setText("30 40 50");

        jLabel1.setFont(new java.awt.Font("TeX Gyre Bonum", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RMAS Benchmark");

        dsa_p_label.setText("DSA probability:");

        dsa_p.setText("0.7");
        dsa_p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsa_pActionPerformed(evt);
            }
        });

        n_neigh_label.setText("Number of neighbours:");

        n_neigh.setText("2 3");

        start_button.setText("Start Simulation!");
        start_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_buttonActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kobe", "Paris" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Map:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(152, 152, 152)
                        .add(start_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(176, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(alg_sel_label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, n_neigh_label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(dsa_p_label)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(dsa_p))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, alg_sel, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(n_neigh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 61, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(s_time_label)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(start_time))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(target_label)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(n_targets, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(cycle_label)
                                .add(12, 12, 12)
                                .add(num_cycle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(27, 27, 27))))
            .add(layout.createSequentialGroup()
                .add(40, 40, 40)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 430, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cycle_label)
                            .add(num_cycle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(target_label)
                            .add(n_targets, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(s_time_label)
                            .add(start_time, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(alg_sel_label)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(alg_sel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(n_neigh_label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(n_neigh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(dsa_p_label)
                            .add(dsa_p, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 57, Short.MAX_VALUE)
                .add(start_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void alg_selActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alg_selActionPerformed
        // TODO add your handling code here:
        /* Abilito disabilito opzioni aggiuntive a seconda dell'algoritmo */
        String sel = (String) alg_sel.getSelectedItem();
        if (sel.compareTo("DSA") == 0) {
            dsa_p.setVisible(true);
            dsa_p_label.setVisible(true);
            n_neigh_label.setVisible(false);
            n_neigh.setVisible(false);
        } else if (sel.compareTo("Max Sum") == 0) {
            dsa_p.setVisible(false);
            dsa_p_label.setVisible(false);
            n_neigh_label.setVisible(true);
            n_neigh.setVisible(true);
        } else {
            dsa_p.setVisible(false);
            dsa_p_label.setVisible(false);
            n_neigh_label.setVisible(false);
            n_neigh.setVisible(false);
        }
    }//GEN-LAST:event_alg_selActionPerformed

    private void dsa_pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsa_pActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dsa_pActionPerformed

    /* Funzione che cattura l'evento di start */
    private void start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_buttonActionPerformed
        // TODO add your handling code here:
       // Esempio di accesso alle info
         String sel = (String) alg_sel.getSelectedItem();
         String dsa_prob = "";
         String num_neigh = ""; 
         if (sel.equals("DSA")) {
            dsa_prob = dsa_p.getText();
         } else if (sel.equals("Max Sum")) {
            sel = "MaxSum2";
            num_neigh = n_neigh.getText();
         }
         String num_targets = n_targets.getText();
         String n_cycle = num_cycle.getText();
         String s_time = start_time.getText();
         try {
            BufferedWriter out = new BufferedWriter(new FileWriter(new File("../boot/params.cfg")));
            out.write("assignment_group: AAMAS12\n");
            out.write("base_package: RSLBench\n");
            out.write("assignment_class: "+sel+"\n");
            if (sel.equals("DSA")) {
                out.write(sel+"_CHANGE_VALUE_PROBABILITY: "+dsa_prob+"\n");
            }
            else if (sel.equals("MaxSum2")) {
                out.write(sel+"_NUMBER_OF_NEIGHBOURS: "+num_neigh+"\n");
            }
            out.write("experiment_start_time: "+s_time+"\n");
            out.write("number_of_considered_targets: "+num_targets+"\n");
            out.write("number_of_cycles: "+n_cycle+"\n");
            out.flush();
            out.close();
         } catch (IOException e) {
             e.printStackTrace();
         }
         try {
         Start.start("");
         System.exit(1);
         } catch (IllegalInputException e) {
             
         }
         
         //richiamo del codice di avvio con dati scelti
    }//GEN-LAST:event_start_buttonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RmasGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox alg_sel;
    private javax.swing.JLabel alg_sel_label;
    private javax.swing.JLabel cycle_label;
    private javax.swing.JTextField dsa_p;
    private javax.swing.JLabel dsa_p_label;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField n_neigh;
    private javax.swing.JLabel n_neigh_label;
    private javax.swing.JTextField n_targets;
    private javax.swing.JTextField num_cycle;
    private javax.swing.JLabel s_time_label;
    private javax.swing.JButton start_button;
    private javax.swing.JTextField start_time;
    private javax.swing.JLabel target_label;
    // End of variables declaration//GEN-END:variables
}
