
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.TextField;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import org.jdesktop.layout.*;
/**
 * This class a GUI, used to set the necessary options and launch the simulation
 */
public class RmasGui extends javax.swing.JFrame {
    private HashMap<String, String> algVariables = new HashMap<String, String>();
    /**
     * Creates new form RmasGui
     */
    public RmasGui() {
        initComponents();
        variableAdder.setVisible(false);
        variableNameLabel.setVisible(false);
        variableValuesLabel.setVisible(false);
        variableValues.setVisible(false);
        variableName.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        algLabel = new javax.swing.JLabel();
        cycle_label = new javax.swing.JLabel();
        num_cycle = new javax.swing.JTextField();
        s_time_label = new javax.swing.JLabel();
        start_time = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        start_button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mapSelector = new javax.swing.JButton();
        mapName = new javax.swing.JTextField();
        newVariableButton = new javax.swing.JButton();
        variableAdder = new javax.swing.JButton();
        variableName = new javax.swing.JTextField();
        variableValues = new javax.swing.JTextField();
        variableNameLabel = new javax.swing.JLabel();
        variableValuesLabel = new javax.swing.JLabel();
        algorithms = new javax.swing.JTextField();
        number_of_runs_label = new javax.swing.JLabel();
        number_of_runs = new javax.swing.JTextField();

        fc.setSelectedFile(new java.io.File("/home/fabio/svn_rmasbench/trunk/maps/gml/paris/map.gml"));
        fc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                selectedFile(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        algLabel.setText("Algorithms");

        cycle_label.setText("Number of cycles:");

        num_cycle.setText("100");

        s_time_label.setText("Start times:");

        start_time.setText("30 40 50");

        jLabel1.setFont(new java.awt.Font("TeX Gyre Bonum", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RMAS Benchmark");

        start_button.setText("Start Simulation!");
        start_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_buttonActionPerformed(evt);
            }
        });

        jLabel2.setText("Map:");

        mapSelector.setText("Change Map");
        mapSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapSelectorHandler(evt);
            }
        });

        mapName.setEditable(false);
        mapName.setText(fc.getSelectedFile().getPath());

        newVariableButton.setText("Add Variable");
        newVariableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newVariableButtonHandler(evt);
            }
        });

        variableAdder.setText("Add");
        variableAdder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVariableHandler(evt);
            }
        });

        variableNameLabel.setText("Variable Name:");

        variableValuesLabel.setText("Variable Values:");

        algorithms.setText("DSA MaxSum");

        number_of_runs_label.setText("Number of runs:");

        number_of_runs.setText("1");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(mapSelector))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .add(algLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(algorithms, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 158, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(105, 105, 105))
                            .add(layout.createSequentialGroup()
                                .add(14, 14, 14)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(variableAdder, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(variableValuesLabel)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(variableValues, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 119, Short.MAX_VALUE)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(number_of_runs_label)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(number_of_runs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(cycle_label)
                                .add(18, 18, 18)
                                .add(num_cycle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(s_time_label)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(start_time, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(jLabel2)
                                .add(18, 18, 18)
                                .add(mapName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 226, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .add(156, 160, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(40, 40, 40)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 598, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(newVariableButton))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(variableNameLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(variableName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(261, 261, 261)
                        .add(start_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(23, 23, 23)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(algLabel)
                            .add(algorithms, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(number_of_runs_label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(number_of_runs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(newVariableButton)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(cycle_label)
                        .add(num_cycle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(s_time_label)
                            .add(start_time, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(mapName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(mapSelector)
                            .add(variableAdder))
                        .add(28, 28, 28)
                        .add(start_button, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(variableNameLabel)
                            .add(variableName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(variableValuesLabel)
                            .add(variableValues, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* Funzione che cattura l'evento di start */
    private void start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_buttonActionPerformed
        // TODO add your handling code here:
       // Esempio di accesso alle info
         String algs = algorithms.getText();
         //String num_targets = n_targets.getText();
         String n_cycle = num_cycle.getText();
         String s_time = start_time.getText();
         String n_runs = number_of_runs.getText();
         String mapDirectory = "";
         
         try {
         mapDirectory = fc.getCurrentDirectory().getCanonicalPath();
         } catch (IOException e) {}
         try {
            BufferedWriter out = new BufferedWriter(new FileWriter(new File("../boot/params.cfg")));
            out.write("assignment_group: AAMAS12\n");
            out.write("base_package: RSLBench\n");
            out.write("assignment_class: "+algs+"\n");
            for(String variableName: algVariables.keySet()) {
                out.write(variableName+": "+algVariables.get(variableName)+"\n");
            }
            out.write("experiment_start_time: "+s_time+"\n");
            //out.write("number_of_considered_targets: "+num_targets+"\n");
            out.write("number_of_runs: "+n_runs+"\n");
            out.write("number_of_cycles: "+n_cycle+"\n");
            out.write("map_directory: "+mapDirectory+"\n");
            out.flush();
            out.close();
         } catch (IOException e) {
             e.printStackTrace();
         }
         algVariables.clear();
         try {
         Start.start("");
         System.exit(1);
         } catch (IllegalInputException e) {
             
         }
         
         //richiamo del codice di avvio con dati scelti
    }//GEN-LAST:event_start_buttonActionPerformed
    
    //opens the map file chooser
    private void mapSelectorHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapSelectorHandler
        fc.showOpenDialog(this);
    }//GEN-LAST:event_mapSelectorHandler

    private void selectedFile(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_selectedFile
        if (fc.SELECTED_FILE_CHANGED_PROPERTY.equals(evt.getPropertyName())) {
            try {
                mapName.setText(fc.getSelectedFile().getPath());
            } catch (NullPointerException e) {}
        }   
    }//GEN-LAST:event_selectedFile

    private void newVariableButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newVariableButtonHandler
        newVariableButton.setVisible(false);
        variableAdder.setVisible(true);
        variableNameLabel.setVisible(true);
        variableValuesLabel.setVisible(true);
        variableValues.setVisible(true);
        variableName.setVisible(true);
        
    }//GEN-LAST:event_newVariableButtonHandler

    private void addVariableHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVariableHandler
        newVariableButton.setVisible(true);
        variableAdder.setVisible(false);
        variableNameLabel.setVisible(false);
        variableValuesLabel.setVisible(false);
        variableValues.setVisible(false);
        variableName.setVisible(false);
        if (!variableName.getText().equals("") && !variableValues.getText().equals("")) {
            algVariables.put(variableName.getText(), variableValues.getText());
        }
        variableName.setText("");
        variableValues.setText("");
        
    }//GEN-LAST:event_addVariableHandler

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RmasGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RmasGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algLabel;
    private javax.swing.JTextField algorithms;
    private javax.swing.JLabel cycle_label;
    private javax.swing.JFileChooser fc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField mapName;
    private javax.swing.JButton mapSelector;
    private javax.swing.JButton newVariableButton;
    private javax.swing.JTextField num_cycle;
    private javax.swing.JTextField number_of_runs;
    private javax.swing.JLabel number_of_runs_label;
    private javax.swing.JLabel s_time_label;
    private javax.swing.JButton start_button;
    private javax.swing.JTextField start_time;
    private javax.swing.JButton variableAdder;
    private javax.swing.JTextField variableName;
    private javax.swing.JLabel variableNameLabel;
    private javax.swing.JTextField variableValues;
    private javax.swing.JLabel variableValuesLabel;
    // End of variables declaration//GEN-END:variables
}
